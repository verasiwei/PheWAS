#!/usr/bin/env Rscript
#===PheWAS Pipeline=======
#TBILab: Siwei Zhang
#December, 2018

#This is used to clean the phenotype file and prepare the case/control list

library(devtools)
library(PheWAS)
library(dplyr)
library(tidyr)
library(ggplot2)
library(parallel)
library(MASS)
library(meta)
library(ggrepel)
library(DT)
library(MatchIt)
library(spam)

args=commandArgs(trailingOnly=TRUE)
pheno_dat=args[1]
demo_dat=args[2]
genotypes=args[3]
dir=args[4]
ratio=args[5]

#prepare the genotype file

genotypes=read.table(paste(dir,genotypes,sep=""),header = TRUE,sep = ",")
colnames(genotypes)[1]="id"
str(genotypes)


#prepare the phenotype file
phenotypes_dat=function(){
    dat=load(paste(dir,pheno_dat,sep=""))
    return(get(dat))
}
pheno_dat=phenotypes_dat()
str(pheno_dat)
#update phenotypes file and genotype file
pheno_dat=pheno_dat[pheno_dat@Dimnames[[1]] %in% genotypes[,"id"],]
colnames(pheno_dat)=substring(colnames(pheno_dat),2)
genotypes=genotypes[genotypes[,"id"] %in% pheno_dat@Dimnames[[1]],]
#calculate phenome burden
phenome_burden_dat=data.frame("GRID_DEMOGRAPHICS"=names(rowSums(pheno_dat)),
                                "phenome_burden"=unname(rowSums(pheno_dat)))

##===prepare the demographic data on inclusion criteria people======
#read in demographic data sparse matrix
demographic_dat=function(){
    dat=load(paste(dir,demo_dat,sep=""))
    return(get(dat))
  }
demo_dat=demographic_dat()
  
demo_dat=subset(demo_dat, GRID_DEMOGRAPHICS %in% pheno_dat@Dimnames[[1]])
pheno_dat=pheno_dat[which(pheno_dat@Dimnames[[1]] %in% demo_dat$GRID_DEMOGRAPHICS),]
genotypes=genotypes[genotypes[,"id"] %in% pheno_dat@Dimnames[[1]],]
demo_dat$group=ifelse(demo_dat$GRID_DEMOGRAPHICS %in% genotypes[which(genotypes$group==1),"id"],"1","0")
  
demo_dat=merge(demo_dat,phenome_burden_dat,by="GRID_DEMOGRAPHICS",sort = FALSE)
demo_dat$age=as.integer(floor((Sys.Date()-as.Date(demo_dat$DOB))/365))
#calculate age, no information indicate when people died, cannot calculate age for those dead people
#demo_dat$age=floor(Sys.Data()-as.Date(demo_dat$DOB))/365)
demo_dat$group=as.factor(demo_dat$group)
demo_dat$SEX=as.factor(demo_dat$SEX)
#demo_dat=demo_dat[which(demo_dat$SEX!="UNK"),]
demo_dat$phenome_burden=as.integer(demo_dat$phenome_burden)
levels(demo_dat$RACE)=c("OTHER","B","OTHER","OTHER","OTHER","OTHER","W")
rownames(demo_dat)=demo_dat$GRID_DEMOGRAPHICS


str(demo_dat)
str(pheno_dat)


##=============Propensity Score MATCH================
message("begin matching")
start=Sys.time()
ratio=as.numeric(ratio)
match_dat=matchit(group~SEX+RACE+EHRAge+age+phenome_burden,
                  exact=c("SEX","RACE"),#matches each treated unit to all possible control units with exactly the same values on these covariates
                  data = demo_dat[,c("EHRAge","SEX","RACE","group","phenome_burden","age")],
                  method = "nearest",#nearest selects the "ratio" best control matches for each treatment individual,distance measure by defined distance
                  ratio=2,
                  caliper = .10,#a control unit within the caliper for a treated unit is randomly selected as the match for that treated unit
                  distance="logit")
end=Sys.time()
end-start
message("finished matching")

match_id=subset(match_dat$match.matrix,subset = !apply(is.na(match_dat$match.matrix),1,all))
caselist=row.names(match_id)

controllist=c()
for (i in 1:ratio){
controllist=unname(c(controllist,match_id[,i]))
}

controllist=controllist[which(!is.na(controllist))]
totallist=c(caselist,controllist)
case_control_list=data.frame("id"=totallist,"group"=ifelse(totallist %in% caselist,1,0))
pheno_dat=pheno_dat[rownames(pheno_dat) %in% totallist,]#cleaned icd9 phenotype file which only include case/control 
demo_dat=demo_dat[rownames(pheno_dat) %in% totallist,]#cleaned demographics file which only include case/control 

message("begin saving matched data")
save(match_dat,file=paste(dir,"match_dat.RData",sep=""))
write.table(case_control_list,file =paste(dir,"case_control_list.csv",sep = ""),col.names = TRUE,row.names = FALSE,sep = ",")
save(pheno_dat,file=paste(dir,"match_pheno_dat.RData",sep=""))
save(demo_dat,file=paste(dir,"match_demo_dat.RData",sep=""))



#save(case_control,file = paste(dir,"match_case_control_dat.RData",sep=""))
#save(demo_dat,file = paste(dir,"demo_dat.RData",sep=""))
#save(pheno_dat,file = paste(dir,"pheno_dat.RData",sep=""))
#case_control_list_nomatch=data.frame("id"=demo_dat$GRID_DEMOGRAPHICS,"group"=demo_dat$group)
#write.table(case_control_list_nomatch,file =paste(dir,"case_control_list_nomatch.csv",sep = ""),col.names = TRUE,row.names = FALSE,sep = ",")
#save(demo_dat,file=paste(dir,"match_demo_dat.RData",sep=""))
#save(pheno_dat,file = paste(dir,"match_pheno_dat.RData",sep=""))




